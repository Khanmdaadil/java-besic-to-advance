version: '3.8'

services:
  # PostgreSQL Database - same as production
  postgres:
    image: postgres:14-alpine
    container_name: messenger-postgres-dev
    restart: always
    environment:
      POSTGRES_DB: messenger
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: password
    ports:
      - "5432:5432"
    volumes:
      - postgres-data-dev:/var/lib/postgresql/data
    networks:
      - messenger-network-dev
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 10s
      timeout: 5s
      retries: 5

  # Spring Boot Backend in development mode
  backend:
    build:
      context: .
      dockerfile: Dockerfile.backend.dev
    container_name: messenger-backend-dev
    depends_on:
      postgres:
        condition: service_healthy
    environment:
      - SPRING_DATASOURCE_URL=jdbc:postgresql://postgres:5432/messenger
      - SPRING_DATASOURCE_USERNAME=postgres
      - SPRING_DATASOURCE_PASSWORD=password
      - SPRING_JPA_HIBERNATE_DDL_AUTO=update
      - SPRING_MAIN_ALLOW_CIRCULAR_REFERENCES=true
      - FILE_UPLOAD_DIRECTORY=/app/uploads
      # Development-specific settings
      - SPRING_PROFILES_ACTIVE=dev
      - SPRING_DEVTOOLS_RESTART_ENABLED=true
      - SPRING_JPA_SHOW_SQL=true
      - LOGGING_LEVEL_COM_MESSENGER=DEBUG
    ports:
      - "8080:8080"
      - "35729:35729" # LiveReload port
    volumes:
      - ./src:/app/src
      - ./uploads:/app/uploads
    networks:
      - messenger-network-dev

  # React Frontend in development mode
  frontend:
    image: node:16-alpine
    container_name: messenger-frontend-dev
    working_dir: /app
    # Fix permission issues and set correct backend URL
    command: sh -c "mkdir -p node_modules/.cache && chmod -R 777 node_modules && npm install && npm start"
    depends_on:
      - backend
    ports:
      - "3000:3000"
    volumes:
      - ./frontend:/app
      - node_modules:/app/node_modules
    environment:
      - NODE_ENV=development
      - CHOKIDAR_USEPOLLING=true
      # In GitHub Codespaces, frontend uses relative URLs to connect to the backend via the proxy
      # This enables HTTPS to work properly when running in GitHub Codespaces
      - REACT_APP_API_URL=/
      - WDS_SOCKET_PORT=0
      - PORT=3000
    networks:
      - messenger-network-dev

networks:
  messenger-network-dev:
    driver: bridge

volumes:
  postgres-data-dev:
    driver: local
  node_modules:
