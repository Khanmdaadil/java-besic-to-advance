FROM node:16-alpine as build

WORKDIR /app

# Copy package.json and install dependencies
COPY package*.json ./
RUN npm install

# Copy source code
COPY . .

# Update the WebSocketService to use the correct URL in production
# No need for the sed command as we've added dynamic URL detection in the WebSocketService.js file
# Setting NODE_ENV to production will ensure it uses the correct backend URL
ENV NODE_ENV=production

# Add proxy configuration
RUN echo '{\n  "proxy": "http://backend:8080"\n}' > .env

# Build the app
RUN npm run build

# Production stage with Nginx
FROM nginx:alpine

# Copy built app from build stage
COPY --from=build /app/build /usr/share/nginx/html

# Copy custom Nginx config
COPY nginx.conf /etc/nginx/conf.d/default.conf

EXPOSE 80

CMD ["nginx", "-g", "daemon off;"]
