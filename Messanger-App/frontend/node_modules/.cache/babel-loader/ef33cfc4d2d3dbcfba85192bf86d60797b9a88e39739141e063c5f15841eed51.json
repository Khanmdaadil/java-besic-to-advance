{"ast":null,"code":"var _jsxFileName = \"/workspaces/java-besic-to-advance/Messanger-App/frontend/src/components/CallDialog.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, useRef } from 'react';\nimport { Dialog, DialogTitle, DialogContent, DialogActions, Button, IconButton, Box, Typography, Grid, CircularProgress, Alert, Snackbar } from '@mui/material';\nimport CallEndIcon from '@mui/icons-material/CallEnd';\nimport MicIcon from '@mui/icons-material/Mic';\nimport MicOffIcon from '@mui/icons-material/MicOff';\nimport VideocamIcon from '@mui/icons-material/Videocam';\nimport VideocamOffIcon from '@mui/icons-material/VideocamOff';\nimport Peer from 'simple-peer';\nimport WebSocketService from '../services/WebSocketService';\nimport CallService from '../services/CallService';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst CallDialog = ({\n  open,\n  onClose,\n  callData,\n  currentUser,\n  onCallStatusChange\n}) => {\n  _s();\n  var _callData$receiverNam;\n  const [stream, setStream] = useState(null);\n  const [remoteStream, setRemoteStream] = useState(null);\n  const [isVideo, setIsVideo] = useState((callData === null || callData === void 0 ? void 0 : callData.type) === 'VIDEO');\n  const [isMuted, setIsMuted] = useState(false);\n  const [isVideoEnabled, setIsVideoEnabled] = useState((callData === null || callData === void 0 ? void 0 : callData.type) === 'VIDEO');\n  const [isConnecting, setIsConnecting] = useState(true);\n  const [isInitiator, setIsInitiator] = useState((callData === null || callData === void 0 ? void 0 : callData.callerId) === (currentUser === null || currentUser === void 0 ? void 0 : currentUser.id));\n  const [peer, setPeer] = useState(null);\n  const [error, setError] = useState(null);\n  const [iceServers, setIceServers] = useState([]);\n  const [connectionQuality, setConnectionQuality] = useState('good');\n  const localVideoRef = useRef(null);\n  const remoteVideoRef = useRef(null);\n\n  // Fetch ICE servers on component mount\n  useEffect(() => {\n    const getIceServersConfig = async () => {\n      try {\n        const servers = await CallService.getIceServers();\n        setIceServers(servers);\n      } catch (error) {\n        console.error('Failed to get ICE server configuration:', error);\n        setError('Failed to get call configuration');\n      }\n    };\n    getIceServersConfig();\n  }, []);\n\n  // Initialize media stream when the dialog opens\n  useEffect(() => {\n    if (!open) return;\n    const constraints = {\n      video: isVideo,\n      audio: true\n    };\n\n    // Media access timeout handling\n    const mediaTimeout = setTimeout(() => {\n      setError('Taking too long to access camera/microphone. Please check permissions.');\n    }, 10000);\n    navigator.mediaDevices.getUserMedia(constraints).then(stream => {\n      clearTimeout(mediaTimeout);\n      setStream(stream);\n      if (localVideoRef.current) {\n        localVideoRef.current.srcObject = stream;\n      }\n\n      // Only initialize peer after we have ICE servers\n      if (iceServers.length > 0) {\n        initializePeer(stream);\n      }\n    }).catch(error => {\n      clearTimeout(mediaTimeout);\n      console.error('Error accessing media devices:', error);\n      setError(`Could not access ${isVideo ? 'camera' : 'microphone'}. Please check permissions.`);\n      onClose();\n    });\n    return () => {\n      // Clean up streams\n      clearTimeout(mediaTimeout);\n      if (stream) {\n        stream.getTracks().forEach(track => track.stop());\n      }\n      if (peer) {\n        peer.destroy();\n      }\n    };\n  }, [open, iceServers]);\n\n  // Setup WebRTC peer\n  const initializePeer = stream => {\n    const newPeer = new Peer({\n      initiator: isInitiator,\n      trickle: true,\n      stream: stream,\n      config: {\n        iceServers: iceServers\n      }\n    });\n\n    // Set up WebRTC signaling events\n    newPeer.on('signal', data => {\n      // Send signal via WebSocket\n      const signal = {\n        type: isInitiator ? 'offer' : 'answer',\n        targetUserId: isInitiator ? callData.receiverId.toString() : callData.callerId.toString(),\n        senderId: currentUser.id.toString(),\n        callId: callData.id,\n        data: data\n      };\n\n      // Send the appropriate signal based on its type\n      if (data.type === 'offer') {\n        WebSocketService.sendOffer(signal);\n      } else if (data.type === 'answer') {\n        WebSocketService.sendAnswer(signal);\n      } else if (data.candidate) {\n        WebSocketService.sendIceCandidate(signal);\n      }\n    });\n    newPeer.on('connect', () => {\n      setIsConnecting(false);\n      onCallStatusChange('ONGOING');\n      console.log('Peer connection established successfully');\n    });\n    newPeer.on('stream', remoteStream => {\n      setRemoteStream(remoteStream);\n      if (remoteVideoRef.current) {\n        remoteVideoRef.current.srcObject = remoteStream;\n      }\n\n      // Monitor audio levels to check connection quality\n      const audioContext = new AudioContext();\n      const analyser = audioContext.createAnalyser();\n      const microphone = audioContext.createMediaStreamSource(remoteStream);\n      analyser.minDecibels = -90;\n      analyser.maxDecibels = -10;\n      analyser.smoothingTimeConstant = 0.85;\n      microphone.connect(analyser);\n      const dataArray = new Uint8Array(analyser.frequencyBinCount);\n\n      // Periodically check audio levels to determine connection quality\n      const audioLevelInterval = setInterval(() => {\n        analyser.getByteFrequencyData(dataArray);\n\n        // Calculate average volume level\n        let sum = 0;\n        for (let i = 0; i < dataArray.length; i++) {\n          sum += dataArray[i];\n        }\n        const average = sum / dataArray.length;\n\n        // Update connection quality based on audio levels\n        if (average < 10) {\n          setConnectionQuality('poor');\n        } else if (average < 30) {\n          setConnectionQuality('fair');\n        } else {\n          setConnectionQuality('good');\n        }\n      }, 2000);\n\n      // Clean up on unmount\n      return () => clearInterval(audioLevelInterval);\n    });\n    newPeer.on('close', () => {\n      console.log('Peer connection closed');\n      onClose();\n    });\n    newPeer.on('error', err => {\n      console.error('Peer error:', err);\n      setError(`Connection error: ${err.message}`);\n      setTimeout(() => {\n        onClose();\n      }, 3000);\n    });\n\n    // Monitor ICE connection state changes\n    newPeer._pc.oniceconnectionstatechange = () => {\n      const iceState = newPeer._pc.iceConnectionState;\n      console.log('ICE connection state:', iceState);\n      if (iceState === 'disconnected' || iceState === 'failed') {\n        setConnectionQuality('poor');\n        setError('Connection quality is poor. Try turning off video to improve call quality.');\n      } else if (iceState === 'checking') {\n        setConnectionQuality('fair');\n      } else if (iceState === 'connected' || iceState === 'completed') {\n        setConnectionQuality('good');\n      }\n    };\n    setPeer(newPeer);\n\n    // Set up signal handler\n    const handleWebRTCSignal = signal => {\n      if (signal.callId === callData.id) {\n        try {\n          newPeer.signal(signal.data);\n        } catch (error) {\n          console.error('Error applying WebRTC signal:', error);\n        }\n      }\n    };\n\n    // Subscribe to WebRTC signals\n    WebSocketService.subscribeToWebRTC(currentUser.id.toString(), handleWebRTCSignal);\n  };\n\n  // Handle toggle audio\n  const toggleMute = () => {\n    if (stream) {\n      const audioTracks = stream.getAudioTracks();\n      audioTracks.forEach(track => {\n        track.enabled = isMuted;\n      });\n      setIsMuted(!isMuted);\n    }\n  };\n\n  // Handle toggle video\n  const toggleVideo = () => {\n    if (stream) {\n      const videoTracks = stream.getVideoTracks();\n      videoTracks.forEach(track => {\n        track.enabled = !isVideoEnabled;\n      });\n      setIsVideoEnabled(!isVideoEnabled);\n    }\n  };\n\n  // Handle call end\n  const handleEndCall = () => {\n    if (peer) {\n      peer.destroy();\n    }\n\n    // Send hangup signal\n    const signal = {\n      type: 'hangup',\n      targetUserId: isInitiator ? callData.receiverId.toString() : callData.callerId.toString(),\n      senderId: currentUser.id.toString(),\n      callId: callData.id\n    };\n    WebSocketService.sendHangup(signal);\n    onCallStatusChange('COMPLETED');\n    onClose();\n  };\n  if (!callData) return null;\n  return /*#__PURE__*/_jsxDEV(Dialog, {\n    open: open,\n    maxWidth: \"md\",\n    fullWidth: true,\n    PaperProps: {\n      sx: {\n        bgcolor: 'background.default',\n        height: '80vh'\n      }\n    },\n    children: [/*#__PURE__*/_jsxDEV(DialogTitle, {\n      sx: {\n        display: 'flex',\n        justifyContent: 'space-between',\n        alignItems: 'center'\n      },\n      children: [/*#__PURE__*/_jsxDEV(Box, {\n        children: isConnecting ? /*#__PURE__*/_jsxDEV(Box, {\n          sx: {\n            display: 'flex',\n            alignItems: 'center'\n          },\n          children: [/*#__PURE__*/_jsxDEV(CircularProgress, {\n            size: 24,\n            sx: {\n              mr: 2\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 282,\n            columnNumber: 15\n          }, this), isInitiator ? 'Calling...' : 'Incoming call...']\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 281,\n          columnNumber: 13\n        }, this) : isVideo ? 'Video Call' : 'Voice Call'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 279,\n        columnNumber: 9\n      }, this), !isConnecting && /*#__PURE__*/_jsxDEV(Box, {\n        sx: {\n          display: 'flex',\n          alignItems: 'center'\n        },\n        children: [/*#__PURE__*/_jsxDEV(Box, {\n          sx: {\n            width: 12,\n            height: 12,\n            borderRadius: '50%',\n            bgcolor: connectionQuality === 'good' ? 'success.main' : connectionQuality === 'fair' ? 'warning.main' : 'error.main',\n            mr: 1\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 293,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Typography, {\n          variant: \"caption\",\n          children: connectionQuality === 'good' ? 'Good' : connectionQuality === 'fair' ? 'Fair' : 'Poor'\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 301,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 292,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 278,\n      columnNumber: 7\n    }, this), error && /*#__PURE__*/_jsxDEV(Alert, {\n      severity: \"warning\",\n      onClose: () => setError(null),\n      sx: {\n        mx: 2\n      },\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 311,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(DialogContent, {\n      sx: {\n        display: 'flex',\n        flexDirection: 'column',\n        p: 0,\n        position: 'relative',\n        flexGrow: 1\n      },\n      children: [isVideo && /*#__PURE__*/_jsxDEV(Box, {\n        sx: {\n          bgcolor: 'black',\n          width: '100%',\n          height: '100%',\n          display: 'flex',\n          alignItems: 'center',\n          justifyContent: 'center'\n        },\n        children: /*#__PURE__*/_jsxDEV(\"video\", {\n          ref: remoteVideoRef,\n          autoPlay: true,\n          playsInline: true,\n          style: {\n            width: '100%',\n            height: '100%',\n            objectFit: 'cover'\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 336,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 328,\n        columnNumber: 11\n      }, this), isVideo && /*#__PURE__*/_jsxDEV(Box, {\n        sx: {\n          position: 'absolute',\n          bottom: 16,\n          right: 16,\n          width: 200,\n          height: 150,\n          borderRadius: 2,\n          overflow: 'hidden',\n          boxShadow: 3\n        },\n        children: /*#__PURE__*/_jsxDEV(\"video\", {\n          ref: localVideoRef,\n          autoPlay: true,\n          playsInline: true,\n          muted: true,\n          style: {\n            width: '100%',\n            height: '100%',\n            objectFit: 'cover'\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 357,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 347,\n        columnNumber: 11\n      }, this), !isVideo && /*#__PURE__*/_jsxDEV(Box, {\n        sx: {\n          display: 'flex',\n          flexDirection: 'column',\n          alignItems: 'center',\n          justifyContent: 'center',\n          height: '100%'\n        },\n        children: [/*#__PURE__*/_jsxDEV(Box, {\n          sx: {\n            width: 120,\n            height: 120,\n            borderRadius: '50%',\n            bgcolor: 'primary.main',\n            display: 'flex',\n            alignItems: 'center',\n            justifyContent: 'center',\n            mb: 3\n          },\n          children: /*#__PURE__*/_jsxDEV(Typography, {\n            variant: \"h3\",\n            color: \"white\",\n            children: ((_callData$receiverNam = callData.receiverName) === null || _callData$receiverNam === void 0 ? void 0 : _callData$receiverNam.charAt(0)) || '?'\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 388,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 376,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Typography, {\n          variant: \"h5\",\n          gutterBottom: true,\n          children: callData.receiverName\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 392,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Box, {\n          children: [/*#__PURE__*/_jsxDEV(\"audio\", {\n            ref: localVideoRef,\n            autoPlay: true,\n            muted: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 396,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"audio\", {\n            ref: remoteVideoRef,\n            autoPlay: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 397,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 395,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Typography, {\n          variant: \"body2\",\n          color: \"text.secondary\",\n          children: isConnecting ? 'Connecting...' : 'Connected'\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 399,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 369,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 319,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(DialogActions, {\n      sx: {\n        p: 2,\n        bgcolor: 'background.paper',\n        display: 'flex',\n        justifyContent: 'center'\n      },\n      children: [/*#__PURE__*/_jsxDEV(IconButton, {\n        onClick: toggleMute,\n        sx: {\n          bgcolor: isMuted ? 'error.main' : 'action.selected',\n          color: 'white',\n          '&:hover': {\n            bgcolor: isMuted ? 'error.dark' : 'action.selected'\n          },\n          mx: 1\n        },\n        children: isMuted ? /*#__PURE__*/_jsxDEV(MicOffIcon, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 422,\n          columnNumber: 22\n        }, this) : /*#__PURE__*/_jsxDEV(MicIcon, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 422,\n          columnNumber: 39\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 411,\n        columnNumber: 9\n      }, this), isVideo && /*#__PURE__*/_jsxDEV(IconButton, {\n        onClick: toggleVideo,\n        sx: {\n          bgcolor: !isVideoEnabled ? 'error.main' : 'action.selected',\n          color: 'white',\n          '&:hover': {\n            bgcolor: !isVideoEnabled ? 'error.dark' : 'action.selected'\n          },\n          mx: 1\n        },\n        children: !isVideoEnabled ? /*#__PURE__*/_jsxDEV(VideocamOffIcon, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 437,\n          columnNumber: 32\n        }, this) : /*#__PURE__*/_jsxDEV(VideocamIcon, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 437,\n          columnNumber: 54\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 426,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(IconButton, {\n        onClick: handleEndCall,\n        sx: {\n          bgcolor: 'error.main',\n          color: 'white',\n          '&:hover': {\n            bgcolor: 'error.dark'\n          },\n          mx: 1\n        },\n        children: /*#__PURE__*/_jsxDEV(CallEndIcon, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 452,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 441,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 405,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Snackbar, {\n      open: !!error,\n      autoHideDuration: 6000,\n      onClose: () => setError(null),\n      anchorOrigin: {\n        vertical: 'bottom',\n        horizontal: 'center'\n      },\n      children: /*#__PURE__*/_jsxDEV(Alert, {\n        onClose: () => setError(null),\n        severity: \"error\",\n        sx: {\n          width: '100%'\n        },\n        children: error\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 463,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 457,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 267,\n    columnNumber: 5\n  }, this);\n};\n_s(CallDialog, \"WZ8r9Tp2O0iYkcbOhBuipg8J1g8=\");\n_c = CallDialog;\nexport default CallDialog;\nvar _c;\n$RefreshReg$(_c, \"CallDialog\");","map":{"version":3,"names":["React","useState","useEffect","useRef","Dialog","DialogTitle","DialogContent","DialogActions","Button","IconButton","Box","Typography","Grid","CircularProgress","Alert","Snackbar","CallEndIcon","MicIcon","MicOffIcon","VideocamIcon","VideocamOffIcon","Peer","WebSocketService","CallService","jsxDEV","_jsxDEV","CallDialog","open","onClose","callData","currentUser","onCallStatusChange","_s","_callData$receiverNam","stream","setStream","remoteStream","setRemoteStream","isVideo","setIsVideo","type","isMuted","setIsMuted","isVideoEnabled","setIsVideoEnabled","isConnecting","setIsConnecting","isInitiator","setIsInitiator","callerId","id","peer","setPeer","error","setError","iceServers","setIceServers","connectionQuality","setConnectionQuality","localVideoRef","remoteVideoRef","getIceServersConfig","servers","getIceServers","console","constraints","video","audio","mediaTimeout","setTimeout","navigator","mediaDevices","getUserMedia","then","clearTimeout","current","srcObject","length","initializePeer","catch","getTracks","forEach","track","stop","destroy","newPeer","initiator","trickle","config","on","data","signal","targetUserId","receiverId","toString","senderId","callId","sendOffer","sendAnswer","candidate","sendIceCandidate","log","audioContext","AudioContext","analyser","createAnalyser","microphone","createMediaStreamSource","minDecibels","maxDecibels","smoothingTimeConstant","connect","dataArray","Uint8Array","frequencyBinCount","audioLevelInterval","setInterval","getByteFrequencyData","sum","i","average","clearInterval","err","message","_pc","oniceconnectionstatechange","iceState","iceConnectionState","handleWebRTCSignal","subscribeToWebRTC","toggleMute","audioTracks","getAudioTracks","enabled","toggleVideo","videoTracks","getVideoTracks","handleEndCall","sendHangup","maxWidth","fullWidth","PaperProps","sx","bgcolor","height","children","display","justifyContent","alignItems","size","mr","fileName","_jsxFileName","lineNumber","columnNumber","width","borderRadius","variant","severity","mx","flexDirection","p","position","flexGrow","ref","autoPlay","playsInline","style","objectFit","bottom","right","overflow","boxShadow","muted","mb","color","receiverName","charAt","gutterBottom","onClick","autoHideDuration","anchorOrigin","vertical","horizontal","_c","$RefreshReg$"],"sources":["/workspaces/java-besic-to-advance/Messanger-App/frontend/src/components/CallDialog.js"],"sourcesContent":["import React, { useState, useEffect, useRef } from 'react';\nimport { \n  Dialog, DialogTitle, DialogContent, DialogActions, Button, \n  IconButton, Box, Typography, Grid, CircularProgress, Alert, Snackbar\n} from '@mui/material';\nimport CallEndIcon from '@mui/icons-material/CallEnd';\nimport MicIcon from '@mui/icons-material/Mic';\nimport MicOffIcon from '@mui/icons-material/MicOff';\nimport VideocamIcon from '@mui/icons-material/Videocam';\nimport VideocamOffIcon from '@mui/icons-material/VideocamOff';\nimport Peer from 'simple-peer';\nimport WebSocketService from '../services/WebSocketService';\nimport CallService from '../services/CallService';\n\nconst CallDialog = ({ \n  open, \n  onClose, \n  callData, \n  currentUser,\n  onCallStatusChange\n}) => {\n  const [stream, setStream] = useState(null);\n  const [remoteStream, setRemoteStream] = useState(null);\n  const [isVideo, setIsVideo] = useState(callData?.type === 'VIDEO');\n  const [isMuted, setIsMuted] = useState(false);\n  const [isVideoEnabled, setIsVideoEnabled] = useState(callData?.type === 'VIDEO');\n  const [isConnecting, setIsConnecting] = useState(true);\n  const [isInitiator, setIsInitiator] = useState(callData?.callerId === currentUser?.id);\n  const [peer, setPeer] = useState(null);\n  const [error, setError] = useState(null);\n  const [iceServers, setIceServers] = useState([]);\n  const [connectionQuality, setConnectionQuality] = useState('good');\n  \n  const localVideoRef = useRef(null);\n  const remoteVideoRef = useRef(null);\n  \n  // Fetch ICE servers on component mount\n  useEffect(() => {\n    const getIceServersConfig = async () => {\n      try {\n        const servers = await CallService.getIceServers();\n        setIceServers(servers);\n      } catch (error) {\n        console.error('Failed to get ICE server configuration:', error);\n        setError('Failed to get call configuration');\n      }\n    };\n    \n    getIceServersConfig();\n  }, []);\n  \n  // Initialize media stream when the dialog opens\n  useEffect(() => {\n    if (!open) return;\n    \n    const constraints = {\n      video: isVideo,\n      audio: true\n    };\n    \n    // Media access timeout handling\n    const mediaTimeout = setTimeout(() => {\n      setError('Taking too long to access camera/microphone. Please check permissions.');\n    }, 10000);\n    \n    navigator.mediaDevices.getUserMedia(constraints)\n      .then((stream) => {\n        clearTimeout(mediaTimeout);\n        setStream(stream);\n        if (localVideoRef.current) {\n          localVideoRef.current.srcObject = stream;\n        }\n        \n        // Only initialize peer after we have ICE servers\n        if (iceServers.length > 0) {\n          initializePeer(stream);\n        }\n      })\n      .catch((error) => {\n        clearTimeout(mediaTimeout);\n        console.error('Error accessing media devices:', error);\n        setError(`Could not access ${isVideo ? 'camera' : 'microphone'}. Please check permissions.`);\n        onClose();\n      });\n      \n    return () => {\n      // Clean up streams\n      clearTimeout(mediaTimeout);\n      if (stream) {\n        stream.getTracks().forEach((track) => track.stop());\n      }\n      if (peer) {\n        peer.destroy();\n      }\n    };\n  }, [open, iceServers]);\n  \n  // Setup WebRTC peer\n  const initializePeer = (stream) => {\n    const newPeer = new Peer({\n      initiator: isInitiator,\n      trickle: true,\n      stream: stream,\n      config: {\n        iceServers: iceServers\n      }\n    });\n    \n    // Set up WebRTC signaling events\n    newPeer.on('signal', (data) => {\n      // Send signal via WebSocket\n      const signal = {\n        type: isInitiator ? 'offer' : 'answer',\n        targetUserId: isInitiator ? callData.receiverId.toString() : callData.callerId.toString(),\n        senderId: currentUser.id.toString(),\n        callId: callData.id,\n        data: data\n      };\n      \n      // Send the appropriate signal based on its type\n      if (data.type === 'offer') {\n        WebSocketService.sendOffer(signal);\n      } else if (data.type === 'answer') {\n        WebSocketService.sendAnswer(signal);\n      } else if (data.candidate) {\n        WebSocketService.sendIceCandidate(signal);\n      }\n    });\n    \n    newPeer.on('connect', () => {\n      setIsConnecting(false);\n      onCallStatusChange('ONGOING');\n      console.log('Peer connection established successfully');\n    });\n    \n    newPeer.on('stream', (remoteStream) => {\n      setRemoteStream(remoteStream);\n      if (remoteVideoRef.current) {\n        remoteVideoRef.current.srcObject = remoteStream;\n      }\n      \n      // Monitor audio levels to check connection quality\n      const audioContext = new AudioContext();\n      const analyser = audioContext.createAnalyser();\n      const microphone = audioContext.createMediaStreamSource(remoteStream);\n      analyser.minDecibels = -90;\n      analyser.maxDecibels = -10;\n      analyser.smoothingTimeConstant = 0.85;\n      microphone.connect(analyser);\n      \n      const dataArray = new Uint8Array(analyser.frequencyBinCount);\n      \n      // Periodically check audio levels to determine connection quality\n      const audioLevelInterval = setInterval(() => {\n        analyser.getByteFrequencyData(dataArray);\n        \n        // Calculate average volume level\n        let sum = 0;\n        for (let i = 0; i < dataArray.length; i++) {\n          sum += dataArray[i];\n        }\n        const average = sum / dataArray.length;\n        \n        // Update connection quality based on audio levels\n        if (average < 10) {\n          setConnectionQuality('poor');\n        } else if (average < 30) {\n          setConnectionQuality('fair');\n        } else {\n          setConnectionQuality('good');\n        }\n      }, 2000);\n      \n      // Clean up on unmount\n      return () => clearInterval(audioLevelInterval);\n    });\n    \n    newPeer.on('close', () => {\n      console.log('Peer connection closed');\n      onClose();\n    });\n    \n    newPeer.on('error', (err) => {\n      console.error('Peer error:', err);\n      setError(`Connection error: ${err.message}`);\n      setTimeout(() => {\n        onClose();\n      }, 3000);\n    });\n    \n    // Monitor ICE connection state changes\n    newPeer._pc.oniceconnectionstatechange = () => {\n      const iceState = newPeer._pc.iceConnectionState;\n      console.log('ICE connection state:', iceState);\n      \n      if (iceState === 'disconnected' || iceState === 'failed') {\n        setConnectionQuality('poor');\n        setError('Connection quality is poor. Try turning off video to improve call quality.');\n      } else if (iceState === 'checking') {\n        setConnectionQuality('fair');\n      } else if (iceState === 'connected' || iceState === 'completed') {\n        setConnectionQuality('good');\n      }\n    };\n    \n    setPeer(newPeer);\n    \n    // Set up signal handler\n    const handleWebRTCSignal = (signal) => {\n      if (signal.callId === callData.id) {\n        try {\n          newPeer.signal(signal.data);\n        } catch (error) {\n          console.error('Error applying WebRTC signal:', error);\n        }\n      }\n    };\n    \n    // Subscribe to WebRTC signals\n    WebSocketService.subscribeToWebRTC(currentUser.id.toString(), handleWebRTCSignal);\n  };\n  \n  // Handle toggle audio\n  const toggleMute = () => {\n    if (stream) {\n      const audioTracks = stream.getAudioTracks();\n      audioTracks.forEach((track) => {\n        track.enabled = isMuted;\n      });\n      setIsMuted(!isMuted);\n    }\n  };\n  \n  // Handle toggle video\n  const toggleVideo = () => {\n    if (stream) {\n      const videoTracks = stream.getVideoTracks();\n      videoTracks.forEach((track) => {\n        track.enabled = !isVideoEnabled;\n      });\n      setIsVideoEnabled(!isVideoEnabled);\n    }\n  };\n  \n  // Handle call end\n  const handleEndCall = () => {\n    if (peer) {\n      peer.destroy();\n    }\n    \n    // Send hangup signal\n    const signal = {\n      type: 'hangup',\n      targetUserId: isInitiator ? callData.receiverId.toString() : callData.callerId.toString(),\n      senderId: currentUser.id.toString(),\n      callId: callData.id\n    };\n    \n    WebSocketService.sendHangup(signal);\n    onCallStatusChange('COMPLETED');\n    onClose();\n  };\n  \n  if (!callData) return null;\n  \n  return (\n    <Dialog \n      open={open} \n      maxWidth=\"md\" \n      fullWidth\n      PaperProps={{ \n        sx: { \n          bgcolor: 'background.default',\n          height: '80vh'\n        } \n      }}\n    >\n      <DialogTitle sx={{ display: 'flex', justifyContent: 'space-between', alignItems: 'center' }}>\n        <Box>\n          {isConnecting ? (\n            <Box sx={{ display: 'flex', alignItems: 'center' }}>\n              <CircularProgress size={24} sx={{ mr: 2 }} />\n              {isInitiator ? 'Calling...' : 'Incoming call...'}\n            </Box>\n          ) : (\n            isVideo ? 'Video Call' : 'Voice Call'\n          )}\n        </Box>\n        \n        {/* Connection quality indicator */}\n        {!isConnecting && (\n          <Box sx={{ display: 'flex', alignItems: 'center' }}>\n            <Box sx={{ \n              width: 12, \n              height: 12, \n              borderRadius: '50%', \n              bgcolor: connectionQuality === 'good' ? 'success.main' :\n                      connectionQuality === 'fair' ? 'warning.main' : 'error.main',\n              mr: 1\n            }} />\n            <Typography variant=\"caption\">\n              {connectionQuality === 'good' ? 'Good' :\n              connectionQuality === 'fair' ? 'Fair' : 'Poor'}\n            </Typography>\n          </Box>\n        )}\n      </DialogTitle>\n      \n      {/* Error message display */}\n      {error && (\n        <Alert \n          severity=\"warning\" \n          onClose={() => setError(null)}\n          sx={{ mx: 2 }}\n        >\n          {error}\n        </Alert>\n      )}\n      <DialogContent sx={{ \n        display: 'flex', \n        flexDirection: 'column',\n        p: 0,\n        position: 'relative',\n        flexGrow: 1\n      }}>\n        {/* Remote video (full screen) */}\n        {isVideo && (\n          <Box sx={{ \n            bgcolor: 'black', \n            width: '100%', \n            height: '100%',\n            display: 'flex',\n            alignItems: 'center',\n            justifyContent: 'center'\n          }}>\n            <video \n              ref={remoteVideoRef} \n              autoPlay \n              playsInline\n              style={{ width: '100%', height: '100%', objectFit: 'cover' }}\n            />\n          </Box>\n        )}\n        \n        {/* Local video (picture-in-picture) */}\n        {isVideo && (\n          <Box sx={{ \n            position: 'absolute', \n            bottom: 16, \n            right: 16,\n            width: 200,\n            height: 150,\n            borderRadius: 2,\n            overflow: 'hidden',\n            boxShadow: 3\n          }}>\n            <video \n              ref={localVideoRef} \n              autoPlay \n              playsInline\n              muted\n              style={{ width: '100%', height: '100%', objectFit: 'cover' }}\n            />\n          </Box>\n        )}\n        \n        {/* Audio call UI */}\n        {!isVideo && (\n          <Box sx={{ \n            display: 'flex', \n            flexDirection: 'column',\n            alignItems: 'center',\n            justifyContent: 'center',\n            height: '100%'\n          }}>\n            <Box\n              sx={{\n                width: 120,\n                height: 120,\n                borderRadius: '50%',\n                bgcolor: 'primary.main',\n                display: 'flex',\n                alignItems: 'center',\n                justifyContent: 'center',\n                mb: 3\n              }}\n            >\n              <Typography variant=\"h3\" color=\"white\">\n                {callData.receiverName?.charAt(0) || '?'}\n              </Typography>\n            </Box>\n            <Typography variant=\"h5\" gutterBottom>\n              {callData.receiverName}\n            </Typography>\n            <Box>\n              <audio ref={localVideoRef} autoPlay muted />\n              <audio ref={remoteVideoRef} autoPlay />\n            </Box>\n            <Typography variant=\"body2\" color=\"text.secondary\">\n              {isConnecting ? 'Connecting...' : 'Connected'}\n            </Typography>\n          </Box>\n        )}\n      </DialogContent>\n      <DialogActions sx={{ \n        p: 2, \n        bgcolor: 'background.paper',\n        display: 'flex',\n        justifyContent: 'center'\n      }}>\n        <IconButton \n          onClick={toggleMute} \n          sx={{ \n            bgcolor: isMuted ? 'error.main' : 'action.selected',\n            color: 'white',\n            '&:hover': {\n              bgcolor: isMuted ? 'error.dark' : 'action.selected',\n            },\n            mx: 1\n          }}\n        >\n          {isMuted ? <MicOffIcon /> : <MicIcon />}\n        </IconButton>\n        \n        {isVideo && (\n          <IconButton \n            onClick={toggleVideo} \n            sx={{ \n              bgcolor: !isVideoEnabled ? 'error.main' : 'action.selected',\n              color: 'white',\n              '&:hover': {\n                bgcolor: !isVideoEnabled ? 'error.dark' : 'action.selected',\n              },\n              mx: 1\n            }}\n          >\n            {!isVideoEnabled ? <VideocamOffIcon /> : <VideocamIcon />}\n          </IconButton>\n        )}\n        \n        <IconButton \n          onClick={handleEndCall} \n          sx={{ \n            bgcolor: 'error.main',\n            color: 'white',\n            '&:hover': {\n              bgcolor: 'error.dark',\n            },\n            mx: 1\n          }}\n        >\n          <CallEndIcon />\n        </IconButton>\n      </DialogActions>\n      \n      {/* Error Snackbar */}\n      <Snackbar \n        open={!!error} \n        autoHideDuration={6000} \n        onClose={() => setError(null)}\n        anchorOrigin={{ vertical: 'bottom', horizontal: 'center' }}\n      >\n        <Alert onClose={() => setError(null)} severity=\"error\" sx={{ width: '100%' }}>\n          {error}\n        </Alert>\n      </Snackbar>\n    </Dialog>\n  );\n};\n\nexport default CallDialog;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}