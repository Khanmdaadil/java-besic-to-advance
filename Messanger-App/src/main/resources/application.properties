server.port=8080

# Database Configuration
spring.datasource.url=jdbc:postgresql://localhost:5432/messenger
spring.datasource.username=postgres
spring.datasource.password=password
spring.jpa.hibernate.ddl-auto=update
spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.PostgreSQLDialect

# JWT Configuration
jwt.secret=your-secure-jwt-secret-key-should-be-very-long-and-secure
jwt.expiration=86400000

# File Upload Configuration
spring.servlet.multipart.max-file-size=10MB
spring.servlet.multipart.max-request-size=10MB
file.upload.directory=${user.home}/messenger-uploads

# WebSocket Configuration
websocket.allowed-origins=*
spring.mvc.cors.allowed-origins=*
spring.mvc.cors.allowed-methods=GET,POST,PUT,DELETE,OPTIONS
spring.mvc.cors.allowed-headers=*
spring.mvc.cors.allow-credentials=true

# Security
security.require-ssl=false

# Actuator endpoints for health checks
management.endpoints.web.exposure.include=health,info
management.endpoint.health.show-details=always

# Allow circular references (needed due to some components having circular dependencies)
spring.main.allow-circular-references=true

# WebRTC Configuration
webrtc.stun.urls=stun:stun.l.google.com:19302,stun:stun1.l.google.com:19302,stun:stun2.l.google.com:19302
# Uncomment and configure these for TURN server support
# webrtc.turn.urls=turn:your-turn-server.com:3478
# webrtc.turn.username=username
# webrtc.turn.credential=password
