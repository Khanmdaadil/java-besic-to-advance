version: '3.8'

services:
  # PostgreSQL Database
  postgres:
    image: postgres:14-alpine
    container_name: messenger-postgres
    restart: always
    environment:
      POSTGRES_DB: messenger
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: password
    ports:
      - "5432:5432"
    volumes:
      - postgres-data:/var/lib/postgresql/data
    networks:
      - messenger-network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 10s
      timeout: 5s
      retries: 5

  # Spring Boot Backend
  backend:
    build:
      context: .
      dockerfile: Dockerfile.backend
    container_name: messenger-backend
    depends_on:
      postgres:
        condition: service_healthy
    environment:
      - SPRING_DATASOURCE_URL=jdbc:postgresql://postgres:5432/messenger
      - SPRING_DATASOURCE_USERNAME=postgres
      - SPRING_DATASOURCE_PASSWORD=password
      - SPRING_JPA_HIBERNATE_DDL_AUTO=update
      - SPRING_MAIN_ALLOW_CIRCULAR_REFERENCES=true
      - FILE_UPLOAD_DIRECTORY=/app/uploads
    ports:
      - "8080:8080"
    volumes:
      - ./uploads:/app/uploads
    networks:
      - messenger-network

  # React Frontend
  frontend:
    build:
      context: ./frontend
      dockerfile: ./Dockerfile.frontend
    container_name: messenger-frontend
    depends_on:
      - backend
    ports:
      - "3000:80"
    networks:
      - messenger-network

networks:
  messenger-network:
    driver: bridge

volumes:
  postgres-data:
    driver: local
